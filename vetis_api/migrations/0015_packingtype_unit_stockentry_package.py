# Generated by Django 5.2.6 on 2025-10-22 08:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('vetis_api', '0014_alter_productitem_gtin'),
    ]

    operations = [
        migrations.CreateModel(
            name='PackingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(unique=True)),
                ('uuid', models.UUIDField(unique=True)),
                ('name', models.CharField(max_length=2, verbose_name='идентификатор')),
                ('globalID', models.CharField(max_length=255, verbose_name='название')),
            ],
            options={
                'verbose_name': 'тип упаковки',
                'verbose_name_plural': 'типы упаковки',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='название')),
            ],
            options={
                'verbose_name': 'единица измерения',
                'verbose_name_plural': 'единицы измерения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StockEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(db_index=True)),
                ('uuid', models.UUIDField(db_index=True, unique=True)),
                ('is_active', models.BooleanField(verbose_name='активная')),
                ('is_last', models.BooleanField(verbose_name='последняя')),
                ('status', models.IntegerField(choices=[(100, 'Запись создана'), (101, 'Гашение ВС (импорт)'), (102, 'Гашение ВСД'), (103, 'Производство'), (104, 'Справка о здоровье дойных животных'), (105, 'Аннулирование ВСД или транзакции'), (106, 'Гашение бумажного ВСД'), (110, 'Объединение'), (120, 'Разделение'), (200, 'Внесены изменения'), (201, 'Запись аннулирована'), (202, 'Списание'), (203, 'Редактирование производства'), (204, 'Заключение по результатам ВСЭ'), (230, 'Обновление в результате присоединения'), (231, 'Обновление в результате присоединения'), (240, 'Обновление в результате отделения'), (250, 'Восстановление после удаления'), (260, 'Пометка на удаление'), (300, 'Перемещение в другую группу'), (400, 'Запись удалена'), (410, 'Удаление в результате объединения'), (420, 'Удаление в результате разделения'), (430, 'Удаление в результате присоединения')], verbose_name='статус версии')),
                ('date_created', models.DateTimeField(verbose_name='дата создания')),
                ('date_updated', models.DateTimeField(verbose_name='дата обновления')),
                ('previous_uuid', models.UUIDField(blank=True, null=True, verbose_name='UUID предыдущей версии')),
                ('next_uuid', models.UUIDField(blank=True, null=True, verbose_name='UUID следующей версии')),
                ('entry_number', models.IntegerField(verbose_name='номер записи')),
                ('product_type', models.IntegerField(choices=[(1, 'Мясо и мясопродукты'), (2, 'Корма и кормовые добавки'), (3, 'Живые животные'), (4, 'Лекарственные средства'), (5, 'Пищевые продукты'), (6, 'Непищевые продукты и другое'), (7, 'Рыба и морепродукты'), (8, 'Продукция, не требующая разрешения')], verbose_name='тип продукции')),
                ('product_guid', models.UUIDField(blank=True, null=True, verbose_name='продукция (GUID)')),
                ('subproduct_guid', models.UUIDField(blank=True, null=True, verbose_name='вид продукции (GUID)')),
                ('product_item_guid', models.UUIDField(blank=True, null=True, verbose_name='наименование продукции (GUID)')),
                ('product_item_name', models.CharField(max_length=255, verbose_name='наименование продукции')),
                ('volume', models.DecimalField(decimal_places=6, max_digits=15, verbose_name='объем')),
                ('date_produced_1', models.CharField(max_length=16, verbose_name='дата производства 1')),
                ('date_produced_2', models.CharField(blank=True, max_length=16, verbose_name='дата производства 2')),
                ('date_produced', models.DateTimeField(verbose_name='дата производства')),
                ('date_expiry_1', models.CharField(max_length=16, verbose_name='срок годности 1')),
                ('date_expiry_2', models.CharField(blank=True, max_length=16, verbose_name='срок годности 2')),
                ('date_expiry', models.DateTimeField(verbose_name='срок годности')),
                ('is_perishable', models.BooleanField(verbose_name='скоропорт')),
                ('origin_country', models.CharField(blank=True, max_length=255, null=True, verbose_name='страна происхождения')),
                ('producer_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='наименование производителя')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vetis_api.enterprise', verbose_name='предприятие')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vetis_api.product', verbose_name='продукция')),
                ('product_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vetis_api.productitem', verbose_name='наименование продукции (справочник)')),
                ('subproduct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vetis_api.subproduct', verbose_name='вид продукции')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vetis_api.unit', verbose_name='ЕИ')),
            ],
            options={
                'verbose_name': 'запись складского журнала',
                'verbose_name_plural': 'записи складского журнала',
                'ordering': ['-date_expiry'],
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(choices=[(1, 'Внутренний уровень'), (2, 'Потребительский уровень'), (3, 'Промежуточный уровень'), (4, 'Торговый уровень'), (5, 'Дополнительный уровень'), (6, 'Транспортный уровень')], verbose_name='уровень')),
                ('quantity', models.IntegerField(verbose_name='количество единиц')),
                ('product_marks', models.TextField(blank=True, verbose_name='маркировка')),
                ('packing_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vetis_api.packingtype', verbose_name='тип упаковки')),
                ('stock_entry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vetis_api.stockentry', verbose_name='запись журнала')),
            ],
            options={
                'verbose_name': 'упаковка',
                'verbose_name_plural': 'упаковки',
                'ordering': ['level'],
            },
        ),
    ]
